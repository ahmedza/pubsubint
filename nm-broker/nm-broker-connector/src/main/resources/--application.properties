server.port = 8080

#logging.level.org.springframework.jms=DEBUG
#logging.level.org.apache.qpid.amqp_1_0=DEBUG
#logging.level.org.apache.qpid.jms=DEBUG
#logging.level.org.apache.qpid=DEBUG
#logging.level.sun.security=DEBUG
#logging.level.java.lang.security=DEBUG
#logging.level.javax.net.security=DEBUG
#logging.level.java.net=DEBUG
#logging.level.javax.net.debug=DEBUG
#logging.level.org.apache.qpid.jms.transports.netty=DEBUG
logging.level.com.gcaa.nm=DEBUG

#Hibernate Configuration
#hibernate.dialect=org.hibernate.dialect.H2Dialect
#hibernate.hbm2ddl.auto=create-drop
#hibernate.ejb.naming_strategy=org.hibernate.cfg.ImprovedNamingStrategy
#hibernate.format_sql=true

# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "netgloo_blog"
spring.datasource.url = jdbc:mysql://localhost:3306/nm_dev?autoReconnect=true&useSSL=true

# Username and password
spring.datasource.username = root
spring.datasource.password = root

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = false

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect


# ===============================
# = Spring / ActiveMq
# ===============================
#spring.activemq.broker-url=tcp://127.0.0.1:5672
#spring.activemq.user=****
#spring.activemq.password=****
#spring.activemq.pool.enabled=true
#spring.activemq.pool.max-connections=50
gcaa.security.ssl.key-store: D:/work/projects/workspce/nm/cefi/cefitest/CC0000009204_500.jks
gcaa.security.ssl.key-store-password: Qq3zlmvD0MTT
gcaa.security.ssl.trust-store: D:/work/projects/workspce/nm/cefi/cefitest/CC0000009204_500.jks
gcaa.security.ssl.trust-store-password: Qq3zlmvD0MTT
gcaa.nm.broker-url: amqps://publish.preops.nm.eurocontrol.int:5671

## ocal GCAA BRoker Properties
gcaa.broker.url: amqp://localhost:5672
gcaa.broker.user: swimgw
gcaa.broker.password: swimgw!23
gcaa.broker.flight-plans-queue: gcaanm-msg-q
gcaa.broker.insert-flight-plans-in-topic: false
gcaa.broker.msg-time-to-live: 120000
gcaa.broker.qos-enabled: true

gcaa.nm.listener.initDelay= 3000
gcaa.nm.listener.fixedDelay= 5000

# RecoveryInterval defines the wait between two retries of JMS connection. (Reconnection retries)
gcaa.nm.jmsrecovery-interval= 50000